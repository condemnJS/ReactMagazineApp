[{"D:\\Projects\\react-magazine\\src\\index.js":"1","D:\\Projects\\react-magazine\\src\\reportWebVitals.js":"2","D:\\Projects\\react-magazine\\src\\App.js":"3","D:\\Projects\\react-magazine\\src\\templates\\Register.js":"4","D:\\Projects\\react-magazine\\src\\templates\\Login.js":"5","D:\\Projects\\react-magazine\\src\\templates\\Home.js":"6","D:\\Projects\\react-magazine\\src\\useRoutes.js":"7","D:\\Projects\\react-magazine\\src\\components\\Header.js":"8","D:\\Projects\\react-magazine\\src\\hooks\\useFetch.js":"9","D:\\Projects\\react-magazine\\src\\layoutsComponents\\AdvertisingHeader.js":"10","D:\\Projects\\react-magazine\\src\\layouts\\MainLayout.js":"11","D:\\Projects\\react-magazine\\src\\layouts\\SideLayout.js":"12","D:\\Projects\\react-magazine\\src\\layoutsComponents\\Head.js":"13","D:\\Projects\\react-magazine\\src\\layoutsComponents\\NavBar.js":"14"},{"size":501,"mtime":1609063547405,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":312,"mtime":1609431005133,"results":"18","hashOfConfig":"16"},{"size":4322,"mtime":1609163026549,"results":"19","hashOfConfig":"16"},{"size":2733,"mtime":1609163480535,"results":"20","hashOfConfig":"16"},{"size":369,"mtime":1609420943284,"results":"21","hashOfConfig":"16"},{"size":1071,"mtime":1609500799792,"results":"22","hashOfConfig":"16"},{"size":784,"mtime":1609502273738,"results":"23","hashOfConfig":"16"},{"size":919,"mtime":1609337259200,"results":"24","hashOfConfig":"16"},{"size":204,"mtime":1609501089782,"results":"25","hashOfConfig":"16"},{"size":238,"mtime":1609431128896,"results":"26","hashOfConfig":"16"},{"size":133,"mtime":1609496941156,"results":"27","hashOfConfig":"16"},{"size":5595,"mtime":1609516130295,"results":"28","hashOfConfig":"16"},{"size":154,"mtime":1609515654257,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"113v93q",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\react-magazine\\src\\index.js",[],["62","63"],"D:\\Projects\\react-magazine\\src\\reportWebVitals.js",[],"D:\\Projects\\react-magazine\\src\\App.js",[],"D:\\Projects\\react-magazine\\src\\templates\\Register.js",["64"],"import React, {useState} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {useFetch} from \"../hooks/useFetch\";\r\n\r\nexport const Register = () => {\r\n    const history = useHistory();\r\n    const [form, setForm] = useState({\r\n        fio: '',\r\n        email: '',\r\n        tel: '',\r\n        password: '',\r\n        password_confirmation: ''\r\n    })\r\n    const {loading, request, error} = useFetch(form);\r\n    const changeHandler = (event) => {\r\n        setForm({...form, [event.target.name]: event.target.value}) // Return new object where key it is input name and value it's value input\r\n    }\r\n    const registerHandler = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const data = await request(\r\n                'http://magazine.test/api/register',\r\n                'POST',\r\n                {...form}\r\n            )\r\n            if(data.code === 201){\r\n                history.push('/login');\r\n            }\r\n        } catch (e) {}\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <div className={'form__container mt-5'}>\r\n                <form action=\"\" method={'POST'} className={'form__user'} onSubmit={registerHandler}>\r\n                    <h2 className={'form__h'}>Регистрация</h2>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"fio\" className={'d-block form__label'}>ФИО</label>\r\n                        <input type=\"text\" name={'fio'} id={'fio'}\r\n                               className={error.fio ? 'form__invalid__input form__input__default' : 'form__input__default'}\r\n                               onChange={changeHandler}/>\r\n                        {error.fio ? <span className={'invalid'}>{error.fio}</span> : ''}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\" className={'d-block form__label'}>Email</label>\r\n                        <input type=\"email\" name={'email'} id={'email'}\r\n                               className={error.email ? 'form__invalid__input form__input__default' : 'form__input__default'}\r\n                               onChange={changeHandler}/>\r\n                        {error.email ? <span className={'invalid'}>{error.email}</span> : ''}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\" className={'d-block form__label'}>Пароль</label>\r\n                        <input type=\"password\" name={'password'} id={'password'}\r\n                               className={error.password ? 'form__invalid__input form__input__default' : 'form__input__default'}\r\n                               onChange={changeHandler}/>\r\n                        {error.password ? <span className={'invalid'}>{error.password}</span> : ''}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password_confirmation\" className={'d-block form__label'}>Подтверждение\r\n                            пароля</label>\r\n                        <input type=\"password\" name={'password_confirmation'} id={'password_confirmation'}\r\n                               className={error.password ? 'form__invalid__input form__input__default' : 'form__input__default'}\r\n                               onChange={changeHandler}/>\r\n                        {error.password_confirmation ?\r\n                            <span className={'invalid'}>{error.password_confirmation}</span> : ''}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"tel\" className={'d-block form__label'}>Телефон</label>\r\n                        <input type=\"number\" name={'tel'} id={'tel'}\r\n                               className={error.fio ? 'form__invalid__input form__input__default' : 'form__input__default'}\r\n                               onChange={changeHandler}/>\r\n                        {error.tel ? <span className={'invalid'}>{error.tel}</span> : ''}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" className={'form__btn'}/>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}","D:\\Projects\\react-magazine\\src\\templates\\Login.js",["65"],"import React, {useState} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {useFetch} from \"../hooks/useFetch\";\r\n\r\nexport const Login = () => {\r\n    const history = useHistory() // For redirects\r\n    const [form, setForm] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n    const {loading, request, error} = useFetch(form)\r\n    const changeHandler = (event) => {\r\n        setForm({...form, [event.target.name]: event.target.value}) // Return new object where key it is input name and value it's value input\r\n    }\r\n    const loginHandler = async (event) => { // Logics of Login\r\n        event.preventDefault();\r\n        try {\r\n            const data = await request(\r\n                'http://magazine.test/api/login',\r\n                'POST',\r\n                {...form}\r\n            )\r\n            console.log(data);\r\n            if (data.code === 200) {\r\n                history.push('/');\r\n                localStorage.setItem('token', JSON.stringify(data.body.token));\r\n            } else {\r\n                throw new Error('Что пошло не так')\r\n            }\r\n        } catch (e) {\r\n        }\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <div className={'form__container mt-10'}>\r\n                <form action=\"\" method={'POST'} className={'form__user'} onSubmit={loginHandler}>\r\n                    <h2 className={'form__h'}>Авторизация</h2>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\" className={'d-block form__label'}>Email</label>\r\n                        <input type=\"email\" name={'email'} id={'email'}\r\n                               className={error.email ? 'form__invalid__input form__input__default' : 'form__input__default'}\r\n                               onChange={changeHandler}/>\r\n                        {error.email ? <span className={'invalid'}>{error.email}</span> : ''}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\" className={'d-block form__label'}>Пароль</label>\r\n                        <input type=\"password\" name={'password'} id={'password'}\r\n                               className={error.password ? 'form__invalid__input form__input__default' : 'form__input__default'}\r\n                               onChange={changeHandler}/>\r\n                        {error.password ? <span className={'invalid'}>{error.password}</span> : ''}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" className={'form__btn'}/>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}","D:\\Projects\\react-magazine\\src\\templates\\Home.js",["66","67","68"],"import React, {useEffect, useState} from 'react'\r\nimport {useLocation} from 'react-router-dom'\r\nimport {Header} from '../components/Header';\r\nexport const Home = ()=>{\r\n    let location = useLocation()\r\n    console.log(location);\r\n    return (\r\n        <React.Fragment>\r\n            {/*<Header />*/}\r\n            <h1>Home page</h1>\r\n        </React.Fragment>\r\n    );\r\n}","D:\\Projects\\react-magazine\\src\\useRoutes.js",["69","70"],"D:\\Projects\\react-magazine\\src\\components\\Header.js",["71","72"],"D:\\Projects\\react-magazine\\src\\hooks\\useFetch.js",[],"D:\\Projects\\react-magazine\\src\\layoutsComponents\\AdvertisingHeader.js",[],"D:\\Projects\\react-magazine\\src\\layouts\\MainLayout.js",[],"D:\\Projects\\react-magazine\\src\\layouts\\SideLayout.js",[],"D:\\Projects\\react-magazine\\src\\layoutsComponents\\Head.js",["73"],"D:\\Projects\\react-magazine\\src\\layoutsComponents\\NavBar.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":14,"column":12,"nodeType":"80","messageId":"81","endLine":14,"endColumn":19},{"ruleId":"78","severity":1,"message":"79","line":11,"column":12,"nodeType":"80","messageId":"81","endLine":11,"endColumn":19},{"ruleId":"78","severity":1,"message":"82","line":1,"column":16,"nodeType":"80","messageId":"81","endLine":1,"endColumn":25},{"ruleId":"78","severity":1,"message":"83","line":1,"column":27,"nodeType":"80","messageId":"81","endLine":1,"endColumn":35},{"ruleId":"78","severity":1,"message":"84","line":3,"column":9,"nodeType":"80","messageId":"81","endLine":3,"endColumn":15},{"ruleId":"78","severity":1,"message":"85","line":1,"column":34,"nodeType":"80","messageId":"81","endLine":1,"endColumn":40},{"ruleId":"78","severity":1,"message":"86","line":3,"column":9,"nodeType":"80","messageId":"81","endLine":3,"endColumn":17},{"ruleId":"78","severity":1,"message":"83","line":1,"column":16,"nodeType":"80","messageId":"81","endLine":1,"endColumn":24},{"ruleId":"78","severity":1,"message":"82","line":1,"column":26,"nodeType":"80","messageId":"81","endLine":1,"endColumn":35},{"ruleId":"87","severity":1,"message":"88","line":67,"column":21,"nodeType":"89","endLine":67,"endColumn":33},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'Header' is defined but never used.","'Router' is defined but never used.","'Register' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]